// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OSL.EF;

namespace OSL.EF.Migrations
{
    [DbContext(typeof(OpenSportLogContext))]
    partial class OpenSportLogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("OSL.Common.Model.ActivityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AthleteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Calories")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginSystem")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sport")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("TimeSpan")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AthleteId");

                    b.ToTable("ActivityEntity");
                });

            modelBuilder.Entity("OSL.Common.Model.AthleteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Athletes");
                });

            modelBuilder.Entity("OSL.Common.Model.TrackEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActivityEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityEntityId");

                    b.ToTable("TrackEntity");
                });

            modelBuilder.Entity("OSL.Common.Model.TrackSegmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrackEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TrackEntityId");

                    b.ToTable("TrackSegmentEntity");
                });

            modelBuilder.Entity("OSL.Common.Model.ActivityEntity", b =>
                {
                    b.HasOne("OSL.Common.Model.AthleteEntity", "Athlete")
                        .WithMany("Activities")
                        .HasForeignKey("AthleteId");
                });

            modelBuilder.Entity("OSL.Common.Model.TrackEntity", b =>
                {
                    b.HasOne("OSL.Common.Model.ActivityEntity", null)
                        .WithMany("Tracks")
                        .HasForeignKey("ActivityEntityId");
                });

            modelBuilder.Entity("OSL.Common.Model.TrackSegmentEntity", b =>
                {
                    b.HasOne("OSL.Common.Model.TrackEntity", null)
                        .WithMany("TrackSegments")
                        .HasForeignKey("TrackEntityId");

                    b.OwnsMany("OSL.Common.Model.TrackPointVO", "TrackPoints", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Cadence")
                                .HasColumnType("INTEGER");

                            b1.Property<float>("Elevation")
                                .HasColumnType("REAL");

                            b1.Property<int>("HeartRate")
                                .HasColumnType("INTEGER");

                            b1.Property<float>("Latitude")
                                .HasColumnType("REAL");

                            b1.Property<float>("Longitude")
                                .HasColumnType("REAL");

                            b1.Property<int>("Power")
                                .HasColumnType("INTEGER");

                            b1.Property<float>("Temperature")
                                .HasColumnType("REAL");

                            b1.Property<DateTimeOffset>("Time")
                                .HasColumnType("TEXT");

                            b1.Property<int>("TrackSegmentEntityId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("TrackSegmentEntityId");

                            b1.ToTable("TrackPointVO");

                            b1.WithOwner()
                                .HasForeignKey("TrackSegmentEntityId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
